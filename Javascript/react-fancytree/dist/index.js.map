{"version":3,"file":"index.js","sources":["../src/TreeContext.js","../src/FancyTree.js","../src/utils.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\nimport constate from 'constate';\r\nimport { useImmerReducer } from 'use-immer';\r\nimport { filter, includes, keys, map, mapKeys, mapValues, get } from 'lodash';\r\nimport {original} from \"immer\"\r\nimport { toTree } from '@ttungbmt/tree-js';\r\n\r\nconst initialState = {\r\n\tloading: false,\r\n\tids: [],\r\n\tentities: {}\r\n};\r\n\r\nconst updateIds = state => void (state.ids = keys(state.entities))\r\n\r\nconst caseReducers = {\r\n\tsetLoading: (state, { payload }) => state.loading = payload,\r\n\tsetAll: (state, { payload }) => {\r\n\t\tstate.entities = mapKeys(payload, 'id')\r\n\t\tupdateIds(state)\r\n\t},\r\n\tselect: (state, {payload}) => {\r\n\t\tpayload.ids.map(id => state.entities[id].selected = payload.selected)\r\n\t},\r\n\tselectOne: (state, { payload: {ids, selected, siblingIds} }) => {\r\n\t\tsiblingIds.map(id => state.entities[id].selected = !selected)\r\n\t\tids.map(id => state.entities[id].selected = selected)\r\n\t},\r\n\tsetExpand: (state, {payload: id}) => {\r\n\t\tif(state.entities[id]) state.entities[id].expanded = true\r\n\t},\r\n\tsetCollapse: (state, {payload: id}) => {\r\n\t\tif(state.entities[id]) state.entities[id].expanded = false\r\n\t}\r\n};\r\n\r\nconst reducer = (draft, action) => void caseReducers[action.type](draft, action);\r\n\r\nfunction useTree() {\r\n\tconst [state, dispatch] = useImmerReducer(reducer, initialState);\r\n\tconst [tree, setTree] = useState(undefined);\r\n\r\n\tconst actions = useCallback(() => ({\r\n\t\t...mapValues(caseReducers, (action, type) => (payload) => dispatch({ type, payload })),\r\n\t\texpandAll: () => tree.expandAll(),\r\n\t\tcollapseAll: () => tree.expandAll(false),\r\n\t\ttoggleExpandAll: () => tree.visit((node) => node.toggleExpanded()),\r\n\t}), [tree]);\r\n\r\n\treturn {\r\n\t\t...actions(),\r\n\t\ttree,\r\n\t\tsetTree,\r\n\t\tdispatch,\r\n\t\tsource: toTree(state.ids.map(id => state.entities[id])),\r\n\t};\r\n}\r\n\r\nconst [TreeProvider, useTreeContext] = constate(useTree);\r\n\r\nexport {\r\n\tTreeProvider,\r\n\tuseTreeContext\r\n};","import React, {memo, useRef, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport _ from 'lodash';\r\nimport $ from 'jquery';\r\nimport 'jquery-ui'\r\nimport 'jquery.fancytree'\r\nimport 'jquery.fancytree/dist/modules/jquery.fancytree.filter'\r\nimport 'jquery.fancytree/dist/modules/jquery.fancytree.glyph'\r\nimport {useTreeContext} from './TreeContext';\r\nimport {nanoid} from 'nanoid'\r\nimport {useContextMenu, Menu, Item, Separator, contextMenu} from \"react-contexify\";\r\nimport \"react-contexify/dist/ReactContexify.css\";\r\n\r\nconst events = ['blurTree', 'create', 'init', 'focusTree', 'restore', 'activate', 'beforeActivate', 'beforeExpand', 'beforeSelect', 'blur', 'click', 'collapse', 'createNode', 'dblclick', 'deactivate', 'expand', 'focus', 'keydown', 'keypress', 'lazyLoad', 'loadChildren', 'loadError', 'postProcess', 'modifyChild', 'renderNode', 'renderTitle', 'select'];\r\n\r\nconst toEventFuncs = (props) => _.chain(events).mapKeys((n) => n).mapValues((n) => (...args) => {\r\n    let eventName = `on${_.upperFirst(n)}`;\r\n    props[eventName] && props[eventName](...args);\r\n}).value();\r\n\r\n\r\nfunction useTreeElement(treeRef, props) {\r\n    const {setTree} = useTreeContext()\r\n\r\n    const options = _.omit(props.options, events) || {};\r\n    useEffect(() => {\r\n        let $el;\r\n\r\n        if (treeRef.current) {\r\n            let eventFns = toEventFuncs(props);\r\n\r\n            $el = $(treeRef.current).fancytree({\r\n                ...eventFns,\r\n                ...options,\r\n                renderNode: function (event, {node}) {\r\n                    let $el = $(node.span).find('.label-feature-count'),\r\n                        count = node.data.count\r\n\r\n                    if (count && !$el.length) {\r\n                        $(node.span).append($(`<div class=\"label-feature-count\">${count}</div>`));\r\n                    }\r\n\r\n\r\n                    $(node.span).find('.fancytree-title').contextmenu((e) => {\r\n                        contextMenu.show({\r\n                            id: MENU_ID,\r\n                            event: e,\r\n                            props: {\r\n                                ...node.data,\r\n                                ..._.pick(node, ['title', 'type'])\r\n                            }\r\n                        })\r\n                    })\r\n                },\r\n\r\n            });\r\n\r\n            setTree($.ui.fancytree.getTree(treeRef.current))\r\n        }\r\n    }, []);\r\n}\r\n\r\nconst renderTree = (nodes, key) => {\r\n    if (_.isArray(nodes))\r\n        return nodes.map((node, key) => renderTree(node, key + 1))\r\n\r\n    const {children, tooltip, title, count, data = {}, ...rest} = nodes\r\n    const folder = _.isNil(rest.folder) ? _.isArray(children) && !_.isEmpty(children) : rest.folder\r\n\r\n    return (\r\n        <li\r\n            key={key}\r\n            id={'ft' + key}\r\n            title={tooltip}\r\n            className={clsx('relative', {folder})}\r\n            data-json={JSON.stringify({...rest, ...data})}\r\n        >\r\n            {title}\r\n            {_.isArray(children) ? (\r\n                <ul>\r\n                    {children.map((node1, key1) => renderTree(node1, key + '.' + (key1 + 1)))}\r\n                </ul>\r\n            ) : null}\r\n        </li>\r\n    )\r\n}\r\n\r\nconst MENU_ID = \"layers\";\r\n\r\nfunction FancyTree({id, style, className, children, source, onItemClick, ...props}) {\r\n    const treeRef = useRef(null);\r\n    const {show, hideAll} = useContextMenu({\r\n        id: MENU_ID,\r\n    });\r\n\r\n    useTreeElement(treeRef, {...props, show});\r\n\r\n    return (\r\n        <div id={id} className={clsx(className)} style={style} ref={treeRef}>\r\n            {children ? (\r\n                children\r\n            ) : (\r\n                <ul style={{display: 'none'}}>\r\n                    {renderTree(source)}\r\n                </ul>\r\n            )}\r\n\r\n            <Menu id={MENU_ID}>\r\n                <Item id=\"act-edit\" onClick={onItemClick}>\r\n                    Tùy chỉnh\r\n                </Item>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nFancyTree.defaultProps = {\r\n    options: {\r\n        checkbox: true, // Show check boxes\r\n        selectMode: 3, // 1:single, 2:multi, 3:multi-hier\r\n        quicksearch: true, // Navigate to next node by typing the first letters\r\n        icon: true, // Display node icons\r\n        clickFolderMode: 3, // 1:activate, 2:expand, 3:activate and expand, 4:activate (dblclick expands)\r\n\r\n        checkboxAutoHide: false, // Display check boxes on hover only\r\n        disabled: false, // Disable control\r\n\r\n        wide: {\r\n            iconWidth: '3em', // Adjust this if @fancy-icon-width != \"16px\"\r\n            iconSpacing: '0.5em', // Adjust this if @fancy-icon-spacing != \"3px\"\r\n            labelSpacing: '0.1em', // Adjust this if padding between icon and label != \"3px\"\r\n            levelOfs: '1.5em' // Adjust this if ul padding != \"16px\"\r\n        },\r\n\r\n        filter: {\r\n            autoApply: true, // Re-apply last filter if lazy data is loaded\r\n            autoExpand: false, // Expand all branches that contain matches while filtered\r\n            counter: true, // Show a badge with number of matching child nodes near parent icons\r\n            fuzzy: false, // Match single characters in order, e.g. 'fb' will match 'FooBar'\r\n            hideExpandedCounter: true, // Hide counter badge if parent is expanded\r\n            hideExpanders: false, // Hide expanders if all child nodes are hidden by filter\r\n            highlight: true, // Highlight matches by wrapping inside <mark> tags\r\n            leavesOnly: false, // Match end nodes only\r\n            nodata: true, // Display a 'no data' status node if result is empty\r\n            mode: 'dimm' // Grayout unmatched nodes (pass \"hide\" to remove unmatched node instead)\r\n        },\r\n\r\n        childcounter: {\r\n            deep: true,\r\n            hideZeros: true,\r\n            hideExpanded: true\r\n        },\r\n\r\n        extensions: [\r\n            'filter'\r\n            // 'childcounter'\r\n        ]\r\n    },\r\n    onItemClick: () => {}\r\n};\r\n\r\nexport default memo(FancyTree);","export const getToggleFiles = (node) => {\n    if (node.isFolder()) {\n        let children = []\n        node.visit((child) => {\n            !child.isFolder() && children.push(child)\n        })\n        return children\n    }\n    return [node]\n}\n"],"names":["initialState","loading","ids","entities","updateIds","state","keys","caseReducers","setLoading","payload","setAll","mapKeys","select","map","id","selected","selectOne","siblingIds","setExpand","expanded","setCollapse","reducer","draft","action","type","useTree","useImmerReducer","dispatch","useState","undefined","tree","setTree","actions","useCallback","mapValues","expandAll","collapseAll","toggleExpandAll","visit","node","toggleExpanded","source","toTree","constate","TreeProvider","useTreeContext","events","toEventFuncs","props","_","chain","n","eventName","upperFirst","value","useTreeElement","treeRef","options","omit","useEffect","current","eventFns","$el","$","fancytree","renderNode","event","span","find","count","data","length","append","contextmenu","e","contextMenu","show","MENU_ID","pick","ui","getTree","renderTree","nodes","key","isArray","children","tooltip","title","rest","folder","isNil","isEmpty","React","clsx","JSON","stringify","node1","key1","FancyTree","style","className","onItemClick","useRef","useContextMenu","display","Menu","Item","defaultProps","checkbox","selectMode","quicksearch","icon","clickFolderMode","checkboxAutoHide","disabled","wide","iconWidth","iconSpacing","labelSpacing","levelOfs","filter","autoApply","autoExpand","counter","fuzzy","hideExpandedCounter","hideExpanders","highlight","leavesOnly","nodata","mode","childcounter","deep","hideZeros","hideExpanded","extensions","memo","getToggleFiles","isFolder","child","push"],"mappings":"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"}